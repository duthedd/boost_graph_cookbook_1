#include <string>
#include "create_empty_directed_named_edges_and_vertices_graph.h"
#include "add_named_vertex.h"

boost::adjacency_list<
  boost::vecS,
  boost::vecS,
  boost::directedS,
  boost::property<boost::vertex_name_t,std::string>,
  boost::property<boost::edge_name_t,std::string>
>
create_named_edges_and_vertices_markov_chain() noexcept
{
  auto g
    = create_empty_directed_named_edges_and_vertices_graph();
  const auto vd_a = add_named_vertex("Happy", g);
  const auto vd_b = add_named_vertex("Not unhappy", g);
  const auto aer_aa = boost::add_edge(vd_a, vd_a, g);
  assert(aer_aa.second);
  const auto aer_ab = boost::add_edge(vd_a, vd_b, g);
  assert(aer_ab.second);
  const auto aer_ba = boost::add_edge(vd_b, vd_a, g);
  assert(aer_ba.second);
  const auto aer_bb = boost::add_edge(vd_b, vd_b, g);
  assert(aer_bb.second);

  auto edge_name_map = get(
    boost::edge_name,g
  );
  put(edge_name_map, aer_aa.first, "Fruit");
  put(edge_name_map, aer_ab.first, "No chocolate");
  put(edge_name_map, aer_ba.first, "Chocolate");
  put(edge_name_map, aer_bb.first, "Other candy");

  return g;
}
