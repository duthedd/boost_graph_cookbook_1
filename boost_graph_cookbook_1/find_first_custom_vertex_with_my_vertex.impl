#include "has_custom_vertex_with_my_vertex.h"
#include "install_vertex_custom_type.h"
#include "my_custom_vertex.h"
#include <boost/graph/graph_traits.hpp>
#include <boost/graph/properties.hpp>
#include <cassert>

template <typename graph, typename custom_vertex>
typename boost::graph_traits<graph>::vertex_descriptor
find_first_custom_vertex_with_my_vertex(const custom_vertex& v, const graph& g)
{
  using vd = typename graph::vertex_descriptor;
  const auto vip = vertices(g);
  const auto i = std::find_if(vip.first, vip.second, [&v, &g](const vd d) {
    const auto my_vertex_map = get(boost::vertex_custom_type, g);
    return get(my_vertex_map, d) == v;
  });
  if (i == vip.second) {
    std::stringstream msg;
    msg << __func__ << ": "
        << "could not find custom_vertex '" << v << "'";
    throw std::invalid_argument(msg.str());
  }
  return *i;
}
