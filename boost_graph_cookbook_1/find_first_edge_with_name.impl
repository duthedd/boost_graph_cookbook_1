#include <boost/graph/graph_traits.hpp>
#include <boost/graph/properties.hpp>
#include <string>

template <typename graph>
typename boost::graph_traits<graph>::edge_descriptor find_first_edge_with_name(
  const std::string& name, const graph& g)
{
  using ed = typename boost::graph_traits<graph>::edge_descriptor;
  const auto eip = edges(g);
  const auto i = std::find_if(eip.first, eip.second, [&g, &name](const ed d) {
    const auto edge_name_map = get(boost::edge_name, g);
    return get(edge_name_map, d) == name;
  });
  if (i == eip.second) {
    std::stringstream msg;
    msg << __func__ << ": "
        << "could not find edge with name '" << name << "'";
    throw std::invalid_argument(msg.str());
  }
  return *i;
}
