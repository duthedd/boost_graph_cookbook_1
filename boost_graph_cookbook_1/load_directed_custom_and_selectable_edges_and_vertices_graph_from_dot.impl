#include <fstream>
#include <sstream>
#include <stdexcept>
#include <boost/graph/graphviz.hpp>
#include "create_empty_directed_custom_and_selectable_edges_and_vertices_graph.h"
#include "install_edge_custom_type.h"
#include "install_edge_is_selected.h"
#include "install_vertex_custom_type.h"
#include "install_vertex_is_selected.h"
#include "is_regular_file.h"

template <class graph = decltype(create_empty_directed_custom_and_selectable_edges_and_vertices_graph())>
graph load_directed_custom_and_selectable_edges_and_vertices_graph_from_dot(
  const std::string& dot_filename
)
{
  if (!is_regular_file(dot_filename))
  {
    std::stringstream msg;
    msg << __func__ << ": filename '"
      << dot_filename << "' is not the name"
      << " of a regular file"
    ;
    throw std::invalid_argument(msg.str());
  }
  std::ifstream f(dot_filename.c_str());
  graph g;
  boost::dynamic_properties dp(
    boost::ignore_other_properties
  );
  dp.property("label", get(boost::vertex_custom_type, g));
  dp.property("regular", get(boost::vertex_is_selected, g));
  dp.property("label", get(boost::edge_custom_type, g));
  dp.property("regular", get(boost::edge_is_selected, g));
  boost::read_graphviz(f,g,dp);
  return g;
}
